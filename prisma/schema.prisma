generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  User               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Question {
  id               Int       @id @unique @default(autoincrement())
  category         String
  type             String
  difficulty       String
  question         String
  correct_answer   String
  incorrect_answer String[]
  createdAt        DateTime? @default(now())
  updatedAt        DateTime?
  authorId         String?
  User             User?     @relation(fields: [authorId], references: [id])
  Quizz            Quizz[]
}

model Quizz {
  id        Int        @id @unique @default(autoincrement())
  title     String
  subject   String
  authorId  String?
  createdAt DateTime?  @default(now())
  published Boolean    @default(false)
  updatedAt DateTime?
  User      User?      @relation(fields: [authorId], references: [id])
  Question  Question[]
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id
  username      String?    @unique
  name          String?
  email         String?    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  readAndAgree  Boolean    @default(false)
  Account       Account[]
  Question      Question[]
  Quizz         Quizz[]
  Session       Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum ProfileGender {
  MALE
  FEMALE
  NA
}
